'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by wsdl, Version=4.0.30319.1.
'
Namespace FHLBank.UamIntegration
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="UAM Directory ServicesSoap", [Namespace]:="http://namespace.fhlbsea.com/webservices/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Entity))>  _
    Partial Public Class UAMDirectoryServices
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ListApplicationErrorsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListStatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListCountiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListApplicationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListUserApplicationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListAssignableApplicationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListAssignableApplicationInstitutionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListAssignableApplicationRolesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListAssignableApplicationInstitutionRolesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListApplicationRolesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListUserApplicationRolesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListUserApplicationInstitutionRolesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListDepartmentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListInstitutionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListInstitutionsByTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListUserInstitutionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetExternalUsersForInstitutionAndRolesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListInstitutionUsersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsInternalFHLBUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLandingPageLinkDisplayOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListInstitutionsByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListUserApplicationInstitutionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListUsersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListUserAdministratorsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListUserAccountsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ResetPasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserAccountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetApplicationRolesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteUserAccountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUserAccountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateUserAccountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrepareTaskForDeletionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteUserAccountFromActiveDirectoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInstitutionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInstitutionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateInstitutionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateInstitutionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MergeInstitutionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteInstitutionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListApplicationRoleUsersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListGroupUsersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListUserGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://localhost:58726/DirectoryServices.asmx"
        End Sub
        
        '''<remarks/>
        Public Event ListApplicationErrorsCompleted As ListApplicationErrorsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListStatesCompleted As ListStatesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListCountiesCompleted As ListCountiesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListApplicationsCompleted As ListApplicationsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListUserApplicationsCompleted As ListUserApplicationsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListAssignableApplicationsCompleted As ListAssignableApplicationsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListAssignableApplicationInstitutionsCompleted As ListAssignableApplicationInstitutionsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListAssignableApplicationRolesCompleted As ListAssignableApplicationRolesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListAssignableApplicationInstitutionRolesCompleted As ListAssignableApplicationInstitutionRolesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListApplicationRolesCompleted As ListApplicationRolesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListUserApplicationRolesCompleted As ListUserApplicationRolesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListUserApplicationInstitutionRolesCompleted As ListUserApplicationInstitutionRolesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListDepartmentsCompleted As ListDepartmentsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListInstitutionsCompleted As ListInstitutionsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListInstitutionsByTypeCompleted As ListInstitutionsByTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event ListUserInstitutionsCompleted As ListUserInstitutionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetExternalUsersForInstitutionAndRolesCompleted As GetExternalUsersForInstitutionAndRolesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListInstitutionUsersCompleted As ListInstitutionUsersCompletedEventHandler
        
        '''<remarks/>
        Public Event IsInternalFHLBUserCompleted As IsInternalFHLBUserCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLandingPageLinkDisplayCompleted As GetLandingPageLinkDisplayCompletedEventHandler
        
        '''<remarks/>
        Public Event ListInstitutionsByNameCompleted As ListInstitutionsByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event ListUserApplicationInstitutionsCompleted As ListUserApplicationInstitutionsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListUsersCompleted As ListUsersCompletedEventHandler
        
        '''<remarks/>
        Public Event ListUserAdministratorsCompleted As ListUserAdministratorsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListUserAccountsCompleted As ListUserAccountsCompletedEventHandler
        
        '''<remarks/>
        Public Event ResetPasswordCompleted As ResetPasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserAccountCompleted As GetUserAccountCompletedEventHandler
        
        '''<remarks/>
        Public Event GetApplicationRolesCompleted As GetApplicationRolesCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteUserAccountCompleted As DeleteUserAccountCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUserAccountCompleted As CreateUserAccountCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateUserAccountCompleted As UpdateUserAccountCompletedEventHandler
        
        '''<remarks/>
        Public Event PrepareTaskForDeletionCompleted As PrepareTaskForDeletionCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteUserAccountFromActiveDirectoryCompleted As DeleteUserAccountFromActiveDirectoryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInstitutionCompleted As GetInstitutionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInstitutionsCompleted As GetInstitutionsCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateInstitutionCompleted As CreateInstitutionCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateInstitutionCompleted As UpdateInstitutionCompletedEventHandler
        
        '''<remarks/>
        Public Event MergeInstitutionCompleted As MergeInstitutionCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteInstitutionCompleted As DeleteInstitutionCompletedEventHandler
        
        '''<remarks/>
        Public Event ListApplicationRoleUsersCompleted As ListApplicationRoleUsersCompletedEventHandler
        
        '''<remarks/>
        Public Event ListGroupUsersCompleted As ListGroupUsersCompletedEventHandler
        
        '''<remarks/>
        Public Event ListUserGroupsCompleted As ListUserGroupsCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListApplicationErrors", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListApplicationErrors(ByVal fromDateTime As Date, ByVal toDateTime As Date) As ApplicationError()
            Dim results() As Object = Me.Invoke("ListApplicationErrors", New Object() {fromDateTime, toDateTime})
            Return CType(results(0),ApplicationError())
        End Function
        
        '''<remarks/>
        Public Function BeginListApplicationErrors(ByVal fromDateTime As Date, ByVal toDateTime As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListApplicationErrors", New Object() {fromDateTime, toDateTime}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListApplicationErrors(ByVal asyncResult As System.IAsyncResult) As ApplicationError()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ApplicationError())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListApplicationErrorsAsync(ByVal fromDateTime As Date, ByVal toDateTime As Date)
            Me.ListApplicationErrorsAsync(fromDateTime, toDateTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListApplicationErrorsAsync(ByVal fromDateTime As Date, ByVal toDateTime As Date, ByVal userState As Object)
            If (Me.ListApplicationErrorsOperationCompleted Is Nothing) Then
                Me.ListApplicationErrorsOperationCompleted = AddressOf Me.OnListApplicationErrorsOperationCompleted
            End If
            Me.InvokeAsync("ListApplicationErrors", New Object() {fromDateTime, toDateTime}, Me.ListApplicationErrorsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListApplicationErrorsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListApplicationErrorsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListApplicationErrorsCompleted(Me, New ListApplicationErrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListStates", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListStates() As State()
            Dim results() As Object = Me.Invoke("ListStates", New Object(-1) {})
            Return CType(results(0),State())
        End Function
        
        '''<remarks/>
        Public Function BeginListStates(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListStates", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListStates(ByVal asyncResult As System.IAsyncResult) As State()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),State())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListStatesAsync()
            Me.ListStatesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListStatesAsync(ByVal userState As Object)
            If (Me.ListStatesOperationCompleted Is Nothing) Then
                Me.ListStatesOperationCompleted = AddressOf Me.OnListStatesOperationCompleted
            End If
            Me.InvokeAsync("ListStates", New Object(-1) {}, Me.ListStatesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListStatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListStatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListStatesCompleted(Me, New ListStatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListCounties", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListCounties(ByVal stateCode As String) As County()
            Dim results() As Object = Me.Invoke("ListCounties", New Object() {stateCode})
            Return CType(results(0),County())
        End Function
        
        '''<remarks/>
        Public Function BeginListCounties(ByVal stateCode As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListCounties", New Object() {stateCode}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListCounties(ByVal asyncResult As System.IAsyncResult) As County()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),County())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListCountiesAsync(ByVal stateCode As String)
            Me.ListCountiesAsync(stateCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListCountiesAsync(ByVal stateCode As String, ByVal userState As Object)
            If (Me.ListCountiesOperationCompleted Is Nothing) Then
                Me.ListCountiesOperationCompleted = AddressOf Me.OnListCountiesOperationCompleted
            End If
            Me.InvokeAsync("ListCounties", New Object() {stateCode}, Me.ListCountiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListCountiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListCountiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListCountiesCompleted(Me, New ListCountiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListApplications", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListApplications() As EntityReference()
            Dim results() As Object = Me.Invoke("ListApplications", New Object(-1) {})
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Function BeginListApplications(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListApplications", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListApplications(ByVal asyncResult As System.IAsyncResult) As EntityReference()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListApplicationsAsync()
            Me.ListApplicationsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListApplicationsAsync(ByVal userState As Object)
            If (Me.ListApplicationsOperationCompleted Is Nothing) Then
                Me.ListApplicationsOperationCompleted = AddressOf Me.OnListApplicationsOperationCompleted
            End If
            Me.InvokeAsync("ListApplications", New Object(-1) {}, Me.ListApplicationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListApplicationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListApplicationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListApplicationsCompleted(Me, New ListApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListUserApplications", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListUserApplications(ByVal userName As String) As EntityReference()
            Dim results() As Object = Me.Invoke("ListUserApplications", New Object() {userName})
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Function BeginListUserApplications(ByVal userName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListUserApplications", New Object() {userName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListUserApplications(ByVal asyncResult As System.IAsyncResult) As EntityReference()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListUserApplicationsAsync(ByVal userName As String)
            Me.ListUserApplicationsAsync(userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListUserApplicationsAsync(ByVal userName As String, ByVal userState As Object)
            If (Me.ListUserApplicationsOperationCompleted Is Nothing) Then
                Me.ListUserApplicationsOperationCompleted = AddressOf Me.OnListUserApplicationsOperationCompleted
            End If
            Me.InvokeAsync("ListUserApplications", New Object() {userName}, Me.ListUserApplicationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListUserApplicationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListUserApplicationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListUserApplicationsCompleted(Me, New ListUserApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListAssignableApplications", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListAssignableApplications(ByVal userName As String) As EntityReference()
            Dim results() As Object = Me.Invoke("ListAssignableApplications", New Object() {userName})
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Function BeginListAssignableApplications(ByVal userName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListAssignableApplications", New Object() {userName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListAssignableApplications(ByVal asyncResult As System.IAsyncResult) As EntityReference()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListAssignableApplicationsAsync(ByVal userName As String)
            Me.ListAssignableApplicationsAsync(userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListAssignableApplicationsAsync(ByVal userName As String, ByVal userState As Object)
            If (Me.ListAssignableApplicationsOperationCompleted Is Nothing) Then
                Me.ListAssignableApplicationsOperationCompleted = AddressOf Me.OnListAssignableApplicationsOperationCompleted
            End If
            Me.InvokeAsync("ListAssignableApplications", New Object() {userName}, Me.ListAssignableApplicationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListAssignableApplicationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListAssignableApplicationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListAssignableApplicationsCompleted(Me, New ListAssignableApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListAssignableApplicationInstitutions", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListAssignableApplicationInstitutions(ByVal applicationID As String, ByVal userName As String) As EntityReference()
            Dim results() As Object = Me.Invoke("ListAssignableApplicationInstitutions", New Object() {applicationID, userName})
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Function BeginListAssignableApplicationInstitutions(ByVal applicationID As String, ByVal userName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListAssignableApplicationInstitutions", New Object() {applicationID, userName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListAssignableApplicationInstitutions(ByVal asyncResult As System.IAsyncResult) As EntityReference()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListAssignableApplicationInstitutionsAsync(ByVal applicationID As String, ByVal userName As String)
            Me.ListAssignableApplicationInstitutionsAsync(applicationID, userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListAssignableApplicationInstitutionsAsync(ByVal applicationID As String, ByVal userName As String, ByVal userState As Object)
            If (Me.ListAssignableApplicationInstitutionsOperationCompleted Is Nothing) Then
                Me.ListAssignableApplicationInstitutionsOperationCompleted = AddressOf Me.OnListAssignableApplicationInstitutionsOperationCompleted
            End If
            Me.InvokeAsync("ListAssignableApplicationInstitutions", New Object() {applicationID, userName}, Me.ListAssignableApplicationInstitutionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListAssignableApplicationInstitutionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListAssignableApplicationInstitutionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListAssignableApplicationInstitutionsCompleted(Me, New ListAssignableApplicationInstitutionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListAssignableApplicationRoles", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListAssignableApplicationRoles(ByVal applicationID As String, ByVal userName As String) As EntityReference()
            Dim results() As Object = Me.Invoke("ListAssignableApplicationRoles", New Object() {applicationID, userName})
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Function BeginListAssignableApplicationRoles(ByVal applicationID As String, ByVal userName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListAssignableApplicationRoles", New Object() {applicationID, userName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListAssignableApplicationRoles(ByVal asyncResult As System.IAsyncResult) As EntityReference()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListAssignableApplicationRolesAsync(ByVal applicationID As String, ByVal userName As String)
            Me.ListAssignableApplicationRolesAsync(applicationID, userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListAssignableApplicationRolesAsync(ByVal applicationID As String, ByVal userName As String, ByVal userState As Object)
            If (Me.ListAssignableApplicationRolesOperationCompleted Is Nothing) Then
                Me.ListAssignableApplicationRolesOperationCompleted = AddressOf Me.OnListAssignableApplicationRolesOperationCompleted
            End If
            Me.InvokeAsync("ListAssignableApplicationRoles", New Object() {applicationID, userName}, Me.ListAssignableApplicationRolesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListAssignableApplicationRolesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListAssignableApplicationRolesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListAssignableApplicationRolesCompleted(Me, New ListAssignableApplicationRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListAssignableApplicationInstitutionRole"& _ 
            "s", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListAssignableApplicationInstitutionRoles(ByVal applicationID As String, ByVal userName As String, ByVal institutionID As String) As EntityReference()
            Dim results() As Object = Me.Invoke("ListAssignableApplicationInstitutionRoles", New Object() {applicationID, userName, institutionID})
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Function BeginListAssignableApplicationInstitutionRoles(ByVal applicationID As String, ByVal userName As String, ByVal institutionID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListAssignableApplicationInstitutionRoles", New Object() {applicationID, userName, institutionID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListAssignableApplicationInstitutionRoles(ByVal asyncResult As System.IAsyncResult) As EntityReference()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListAssignableApplicationInstitutionRolesAsync(ByVal applicationID As String, ByVal userName As String, ByVal institutionID As String)
            Me.ListAssignableApplicationInstitutionRolesAsync(applicationID, userName, institutionID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListAssignableApplicationInstitutionRolesAsync(ByVal applicationID As String, ByVal userName As String, ByVal institutionID As String, ByVal userState As Object)
            If (Me.ListAssignableApplicationInstitutionRolesOperationCompleted Is Nothing) Then
                Me.ListAssignableApplicationInstitutionRolesOperationCompleted = AddressOf Me.OnListAssignableApplicationInstitutionRolesOperationCompleted
            End If
            Me.InvokeAsync("ListAssignableApplicationInstitutionRoles", New Object() {applicationID, userName, institutionID}, Me.ListAssignableApplicationInstitutionRolesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListAssignableApplicationInstitutionRolesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListAssignableApplicationInstitutionRolesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListAssignableApplicationInstitutionRolesCompleted(Me, New ListAssignableApplicationInstitutionRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListApplicationRoles", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListApplicationRoles(ByVal applicationID As String, ByVal scope As PermissionScope) As EntityReference()
            Dim results() As Object = Me.Invoke("ListApplicationRoles", New Object() {applicationID, scope})
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Function BeginListApplicationRoles(ByVal applicationID As String, ByVal scope As PermissionScope, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListApplicationRoles", New Object() {applicationID, scope}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListApplicationRoles(ByVal asyncResult As System.IAsyncResult) As EntityReference()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListApplicationRolesAsync(ByVal applicationID As String, ByVal scope As PermissionScope)
            Me.ListApplicationRolesAsync(applicationID, scope, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListApplicationRolesAsync(ByVal applicationID As String, ByVal scope As PermissionScope, ByVal userState As Object)
            If (Me.ListApplicationRolesOperationCompleted Is Nothing) Then
                Me.ListApplicationRolesOperationCompleted = AddressOf Me.OnListApplicationRolesOperationCompleted
            End If
            Me.InvokeAsync("ListApplicationRoles", New Object() {applicationID, scope}, Me.ListApplicationRolesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListApplicationRolesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListApplicationRolesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListApplicationRolesCompleted(Me, New ListApplicationRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListUserApplicationRoles", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListUserApplicationRoles(ByVal applicationID As String, ByVal userName As String) As EntityReference()
            Dim results() As Object = Me.Invoke("ListUserApplicationRoles", New Object() {applicationID, userName})
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Function BeginListUserApplicationRoles(ByVal applicationID As String, ByVal userName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListUserApplicationRoles", New Object() {applicationID, userName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListUserApplicationRoles(ByVal asyncResult As System.IAsyncResult) As EntityReference()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListUserApplicationRolesAsync(ByVal applicationID As String, ByVal userName As String)
            Me.ListUserApplicationRolesAsync(applicationID, userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListUserApplicationRolesAsync(ByVal applicationID As String, ByVal userName As String, ByVal userState As Object)
            If (Me.ListUserApplicationRolesOperationCompleted Is Nothing) Then
                Me.ListUserApplicationRolesOperationCompleted = AddressOf Me.OnListUserApplicationRolesOperationCompleted
            End If
            Me.InvokeAsync("ListUserApplicationRoles", New Object() {applicationID, userName}, Me.ListUserApplicationRolesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListUserApplicationRolesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListUserApplicationRolesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListUserApplicationRolesCompleted(Me, New ListUserApplicationRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListUserApplicationInstitutionRoles", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListUserApplicationInstitutionRoles(ByVal applicationID As String, ByVal userName As String, ByVal institutionID As String) As EntityReference()
            Dim results() As Object = Me.Invoke("ListUserApplicationInstitutionRoles", New Object() {applicationID, userName, institutionID})
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Function BeginListUserApplicationInstitutionRoles(ByVal applicationID As String, ByVal userName As String, ByVal institutionID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListUserApplicationInstitutionRoles", New Object() {applicationID, userName, institutionID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListUserApplicationInstitutionRoles(ByVal asyncResult As System.IAsyncResult) As EntityReference()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListUserApplicationInstitutionRolesAsync(ByVal applicationID As String, ByVal userName As String, ByVal institutionID As String)
            Me.ListUserApplicationInstitutionRolesAsync(applicationID, userName, institutionID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListUserApplicationInstitutionRolesAsync(ByVal applicationID As String, ByVal userName As String, ByVal institutionID As String, ByVal userState As Object)
            If (Me.ListUserApplicationInstitutionRolesOperationCompleted Is Nothing) Then
                Me.ListUserApplicationInstitutionRolesOperationCompleted = AddressOf Me.OnListUserApplicationInstitutionRolesOperationCompleted
            End If
            Me.InvokeAsync("ListUserApplicationInstitutionRoles", New Object() {applicationID, userName, institutionID}, Me.ListUserApplicationInstitutionRolesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListUserApplicationInstitutionRolesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListUserApplicationInstitutionRolesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListUserApplicationInstitutionRolesCompleted(Me, New ListUserApplicationInstitutionRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListDepartments", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListDepartments() As EntityReference()
            Dim results() As Object = Me.Invoke("ListDepartments", New Object(-1) {})
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Function BeginListDepartments(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListDepartments", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListDepartments(ByVal asyncResult As System.IAsyncResult) As EntityReference()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListDepartmentsAsync()
            Me.ListDepartmentsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListDepartmentsAsync(ByVal userState As Object)
            If (Me.ListDepartmentsOperationCompleted Is Nothing) Then
                Me.ListDepartmentsOperationCompleted = AddressOf Me.OnListDepartmentsOperationCompleted
            End If
            Me.InvokeAsync("ListDepartments", New Object(-1) {}, Me.ListDepartmentsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListDepartmentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListDepartmentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListDepartmentsCompleted(Me, New ListDepartmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListInstitutions", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListInstitutions() As Institution()
            Dim results() As Object = Me.Invoke("ListInstitutions", New Object(-1) {})
            Return CType(results(0),Institution())
        End Function
        
        '''<remarks/>
        Public Function BeginListInstitutions(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListInstitutions", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListInstitutions(ByVal asyncResult As System.IAsyncResult) As Institution()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Institution())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListInstitutionsAsync()
            Me.ListInstitutionsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListInstitutionsAsync(ByVal userState As Object)
            If (Me.ListInstitutionsOperationCompleted Is Nothing) Then
                Me.ListInstitutionsOperationCompleted = AddressOf Me.OnListInstitutionsOperationCompleted
            End If
            Me.InvokeAsync("ListInstitutions", New Object(-1) {}, Me.ListInstitutionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListInstitutionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListInstitutionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListInstitutionsCompleted(Me, New ListInstitutionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListInstitutionsByType", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListInstitutionsByType(ByVal type As InstitutionType) As Institution()
            Dim results() As Object = Me.Invoke("ListInstitutionsByType", New Object() {type})
            Return CType(results(0),Institution())
        End Function
        
        '''<remarks/>
        Public Function BeginListInstitutionsByType(ByVal type As InstitutionType, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListInstitutionsByType", New Object() {type}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListInstitutionsByType(ByVal asyncResult As System.IAsyncResult) As Institution()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Institution())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListInstitutionsByTypeAsync(ByVal type As InstitutionType)
            Me.ListInstitutionsByTypeAsync(type, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListInstitutionsByTypeAsync(ByVal type As InstitutionType, ByVal userState As Object)
            If (Me.ListInstitutionsByTypeOperationCompleted Is Nothing) Then
                Me.ListInstitutionsByTypeOperationCompleted = AddressOf Me.OnListInstitutionsByTypeOperationCompleted
            End If
            Me.InvokeAsync("ListInstitutionsByType", New Object() {type}, Me.ListInstitutionsByTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnListInstitutionsByTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListInstitutionsByTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListInstitutionsByTypeCompleted(Me, New ListInstitutionsByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListUserInstitutions", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListUserInstitutions(ByVal userName As String) As Institution()
            Dim results() As Object = Me.Invoke("ListUserInstitutions", New Object() {userName})
            Return CType(results(0),Institution())
        End Function
        
        '''<remarks/>
        Public Function BeginListUserInstitutions(ByVal userName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListUserInstitutions", New Object() {userName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListUserInstitutions(ByVal asyncResult As System.IAsyncResult) As Institution()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Institution())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListUserInstitutionsAsync(ByVal userName As String)
            Me.ListUserInstitutionsAsync(userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListUserInstitutionsAsync(ByVal userName As String, ByVal userState As Object)
            If (Me.ListUserInstitutionsOperationCompleted Is Nothing) Then
                Me.ListUserInstitutionsOperationCompleted = AddressOf Me.OnListUserInstitutionsOperationCompleted
            End If
            Me.InvokeAsync("ListUserInstitutions", New Object() {userName}, Me.ListUserInstitutionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListUserInstitutionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListUserInstitutionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListUserInstitutionsCompleted(Me, New ListUserInstitutionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/GetExternalUsersForInstitutionAndRoles", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetExternalUsersForInstitutionAndRoles(ByVal institutionID As String, ByVal roles() As System.Guid) As UserAccount()
            Dim results() As Object = Me.Invoke("GetExternalUsersForInstitutionAndRoles", New Object() {institutionID, roles})
            Return CType(results(0),UserAccount())
        End Function
        
        '''<remarks/>
        Public Function BeginGetExternalUsersForInstitutionAndRoles(ByVal institutionID As String, ByVal roles() As System.Guid, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetExternalUsersForInstitutionAndRoles", New Object() {institutionID, roles}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetExternalUsersForInstitutionAndRoles(ByVal asyncResult As System.IAsyncResult) As UserAccount()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),UserAccount())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetExternalUsersForInstitutionAndRolesAsync(ByVal institutionID As String, ByVal roles() As System.Guid)
            Me.GetExternalUsersForInstitutionAndRolesAsync(institutionID, roles, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetExternalUsersForInstitutionAndRolesAsync(ByVal institutionID As String, ByVal roles() As System.Guid, ByVal userState As Object)
            If (Me.GetExternalUsersForInstitutionAndRolesOperationCompleted Is Nothing) Then
                Me.GetExternalUsersForInstitutionAndRolesOperationCompleted = AddressOf Me.OnGetExternalUsersForInstitutionAndRolesOperationCompleted
            End If
            Me.InvokeAsync("GetExternalUsersForInstitutionAndRoles", New Object() {institutionID, roles}, Me.GetExternalUsersForInstitutionAndRolesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetExternalUsersForInstitutionAndRolesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetExternalUsersForInstitutionAndRolesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetExternalUsersForInstitutionAndRolesCompleted(Me, New GetExternalUsersForInstitutionAndRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListInstitutionUsers", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListInstitutionUsers(ByVal institutionID As String) As UserAccount()
            Dim results() As Object = Me.Invoke("ListInstitutionUsers", New Object() {institutionID})
            Return CType(results(0),UserAccount())
        End Function
        
        '''<remarks/>
        Public Function BeginListInstitutionUsers(ByVal institutionID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListInstitutionUsers", New Object() {institutionID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListInstitutionUsers(ByVal asyncResult As System.IAsyncResult) As UserAccount()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),UserAccount())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListInstitutionUsersAsync(ByVal institutionID As String)
            Me.ListInstitutionUsersAsync(institutionID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListInstitutionUsersAsync(ByVal institutionID As String, ByVal userState As Object)
            If (Me.ListInstitutionUsersOperationCompleted Is Nothing) Then
                Me.ListInstitutionUsersOperationCompleted = AddressOf Me.OnListInstitutionUsersOperationCompleted
            End If
            Me.InvokeAsync("ListInstitutionUsers", New Object() {institutionID}, Me.ListInstitutionUsersOperationCompleted, userState)
        End Sub
        
        Private Sub OnListInstitutionUsersOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListInstitutionUsersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListInstitutionUsersCompleted(Me, New ListInstitutionUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/IsInternalFHLBUser", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsInternalFHLBUser(ByVal [alias] As String) As Boolean
            Dim results() As Object = Me.Invoke("IsInternalFHLBUser", New Object() {[alias]})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginIsInternalFHLBUser(ByVal [alias] As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IsInternalFHLBUser", New Object() {[alias]}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndIsInternalFHLBUser(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsInternalFHLBUserAsync(ByVal [alias] As String)
            Me.IsInternalFHLBUserAsync([alias], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsInternalFHLBUserAsync(ByVal [alias] As String, ByVal userState As Object)
            If (Me.IsInternalFHLBUserOperationCompleted Is Nothing) Then
                Me.IsInternalFHLBUserOperationCompleted = AddressOf Me.OnIsInternalFHLBUserOperationCompleted
            End If
            Me.InvokeAsync("IsInternalFHLBUser", New Object() {[alias]}, Me.IsInternalFHLBUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsInternalFHLBUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsInternalFHLBUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsInternalFHLBUserCompleted(Me, New IsInternalFHLBUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/GetLandingPageLinkDisplay", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLandingPageLinkDisplay(ByVal userAlias As String) As LandingPageLinkDisplay
            Dim results() As Object = Me.Invoke("GetLandingPageLinkDisplay", New Object() {userAlias})
            Return CType(results(0),LandingPageLinkDisplay)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLandingPageLinkDisplay(ByVal userAlias As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLandingPageLinkDisplay", New Object() {userAlias}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLandingPageLinkDisplay(ByVal asyncResult As System.IAsyncResult) As LandingPageLinkDisplay
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),LandingPageLinkDisplay)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLandingPageLinkDisplayAsync(ByVal userAlias As String)
            Me.GetLandingPageLinkDisplayAsync(userAlias, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLandingPageLinkDisplayAsync(ByVal userAlias As String, ByVal userState As Object)
            If (Me.GetLandingPageLinkDisplayOperationCompleted Is Nothing) Then
                Me.GetLandingPageLinkDisplayOperationCompleted = AddressOf Me.OnGetLandingPageLinkDisplayOperationCompleted
            End If
            Me.InvokeAsync("GetLandingPageLinkDisplay", New Object() {userAlias}, Me.GetLandingPageLinkDisplayOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLandingPageLinkDisplayOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLandingPageLinkDisplayCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLandingPageLinkDisplayCompleted(Me, New GetLandingPageLinkDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListInstitutionsByName", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListInstitutionsByName(ByVal institutionID As String) As Institution()
            Dim results() As Object = Me.Invoke("ListInstitutionsByName", New Object() {institutionID})
            Return CType(results(0),Institution())
        End Function
        
        '''<remarks/>
        Public Function BeginListInstitutionsByName(ByVal institutionID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListInstitutionsByName", New Object() {institutionID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListInstitutionsByName(ByVal asyncResult As System.IAsyncResult) As Institution()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Institution())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListInstitutionsByNameAsync(ByVal institutionID As String)
            Me.ListInstitutionsByNameAsync(institutionID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListInstitutionsByNameAsync(ByVal institutionID As String, ByVal userState As Object)
            If (Me.ListInstitutionsByNameOperationCompleted Is Nothing) Then
                Me.ListInstitutionsByNameOperationCompleted = AddressOf Me.OnListInstitutionsByNameOperationCompleted
            End If
            Me.InvokeAsync("ListInstitutionsByName", New Object() {institutionID}, Me.ListInstitutionsByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnListInstitutionsByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListInstitutionsByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListInstitutionsByNameCompleted(Me, New ListInstitutionsByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListUserApplicationInstitutions", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListUserApplicationInstitutions(ByVal applicationID As String, ByVal userName As String) As EntityReference()
            Dim results() As Object = Me.Invoke("ListUserApplicationInstitutions", New Object() {applicationID, userName})
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Function BeginListUserApplicationInstitutions(ByVal applicationID As String, ByVal userName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListUserApplicationInstitutions", New Object() {applicationID, userName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListUserApplicationInstitutions(ByVal asyncResult As System.IAsyncResult) As EntityReference()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListUserApplicationInstitutionsAsync(ByVal applicationID As String, ByVal userName As String)
            Me.ListUserApplicationInstitutionsAsync(applicationID, userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListUserApplicationInstitutionsAsync(ByVal applicationID As String, ByVal userName As String, ByVal userState As Object)
            If (Me.ListUserApplicationInstitutionsOperationCompleted Is Nothing) Then
                Me.ListUserApplicationInstitutionsOperationCompleted = AddressOf Me.OnListUserApplicationInstitutionsOperationCompleted
            End If
            Me.InvokeAsync("ListUserApplicationInstitutions", New Object() {applicationID, userName}, Me.ListUserApplicationInstitutionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListUserApplicationInstitutionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListUserApplicationInstitutionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListUserApplicationInstitutionsCompleted(Me, New ListUserApplicationInstitutionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListUsers", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListUsers(ByVal userName As String) As UserAccount()
            Dim results() As Object = Me.Invoke("ListUsers", New Object() {userName})
            Return CType(results(0),UserAccount())
        End Function
        
        '''<remarks/>
        Public Function BeginListUsers(ByVal userName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListUsers", New Object() {userName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListUsers(ByVal asyncResult As System.IAsyncResult) As UserAccount()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),UserAccount())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListUsersAsync(ByVal userName As String)
            Me.ListUsersAsync(userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListUsersAsync(ByVal userName As String, ByVal userState As Object)
            If (Me.ListUsersOperationCompleted Is Nothing) Then
                Me.ListUsersOperationCompleted = AddressOf Me.OnListUsersOperationCompleted
            End If
            Me.InvokeAsync("ListUsers", New Object() {userName}, Me.ListUsersOperationCompleted, userState)
        End Sub
        
        Private Sub OnListUsersOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListUsersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListUsersCompleted(Me, New ListUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListUserAdministrators", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListUserAdministrators(ByVal userName As String) As UserAccount()
            Dim results() As Object = Me.Invoke("ListUserAdministrators", New Object() {userName})
            Return CType(results(0),UserAccount())
        End Function
        
        '''<remarks/>
        Public Function BeginListUserAdministrators(ByVal userName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListUserAdministrators", New Object() {userName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListUserAdministrators(ByVal asyncResult As System.IAsyncResult) As UserAccount()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),UserAccount())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListUserAdministratorsAsync(ByVal userName As String)
            Me.ListUserAdministratorsAsync(userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListUserAdministratorsAsync(ByVal userName As String, ByVal userState As Object)
            If (Me.ListUserAdministratorsOperationCompleted Is Nothing) Then
                Me.ListUserAdministratorsOperationCompleted = AddressOf Me.OnListUserAdministratorsOperationCompleted
            End If
            Me.InvokeAsync("ListUserAdministrators", New Object() {userName}, Me.ListUserAdministratorsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListUserAdministratorsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListUserAdministratorsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListUserAdministratorsCompleted(Me, New ListUserAdministratorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListUserAccounts", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListUserAccounts(ByVal firstName As String, ByVal secondName As String, ByVal institutionString As String, ByVal institutions() As Institution) As UserAccount()
            Dim results() As Object = Me.Invoke("ListUserAccounts", New Object() {firstName, secondName, institutionString, institutions})
            Return CType(results(0),UserAccount())
        End Function
        
        '''<remarks/>
        Public Function BeginListUserAccounts(ByVal firstName As String, ByVal secondName As String, ByVal institutionString As String, ByVal institutions() As Institution, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListUserAccounts", New Object() {firstName, secondName, institutionString, institutions}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListUserAccounts(ByVal asyncResult As System.IAsyncResult) As UserAccount()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),UserAccount())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListUserAccountsAsync(ByVal firstName As String, ByVal secondName As String, ByVal institutionString As String, ByVal institutions() As Institution)
            Me.ListUserAccountsAsync(firstName, secondName, institutionString, institutions, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListUserAccountsAsync(ByVal firstName As String, ByVal secondName As String, ByVal institutionString As String, ByVal institutions() As Institution, ByVal userState As Object)
            If (Me.ListUserAccountsOperationCompleted Is Nothing) Then
                Me.ListUserAccountsOperationCompleted = AddressOf Me.OnListUserAccountsOperationCompleted
            End If
            Me.InvokeAsync("ListUserAccounts", New Object() {firstName, secondName, institutionString, institutions}, Me.ListUserAccountsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListUserAccountsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListUserAccountsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListUserAccountsCompleted(Me, New ListUserAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ResetPassword", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ResetPassword(ByVal userName As String, ByVal newPassword As String)
            Me.Invoke("ResetPassword", New Object() {userName, newPassword})
        End Sub
        
        '''<remarks/>
        Public Function BeginResetPassword(ByVal userName As String, ByVal newPassword As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ResetPassword", New Object() {userName, newPassword}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndResetPassword(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResetPasswordAsync(ByVal userName As String, ByVal newPassword As String)
            Me.ResetPasswordAsync(userName, newPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResetPasswordAsync(ByVal userName As String, ByVal newPassword As String, ByVal userState As Object)
            If (Me.ResetPasswordOperationCompleted Is Nothing) Then
                Me.ResetPasswordOperationCompleted = AddressOf Me.OnResetPasswordOperationCompleted
            End If
            Me.InvokeAsync("ResetPassword", New Object() {userName, newPassword}, Me.ResetPasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnResetPasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.ResetPasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ResetPasswordCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/GetUserAccount", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserAccount(ByVal userName As String) As UserAccount
            Dim results() As Object = Me.Invoke("GetUserAccount", New Object() {userName})
            Return CType(results(0),UserAccount)
        End Function
        
        '''<remarks/>
        Public Function BeginGetUserAccount(ByVal userName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUserAccount", New Object() {userName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetUserAccount(ByVal asyncResult As System.IAsyncResult) As UserAccount
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),UserAccount)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserAccountAsync(ByVal userName As String)
            Me.GetUserAccountAsync(userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserAccountAsync(ByVal userName As String, ByVal userState As Object)
            If (Me.GetUserAccountOperationCompleted Is Nothing) Then
                Me.GetUserAccountOperationCompleted = AddressOf Me.OnGetUserAccountOperationCompleted
            End If
            Me.InvokeAsync("GetUserAccount", New Object() {userName}, Me.GetUserAccountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserAccountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserAccountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserAccountCompleted(Me, New GetUserAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/GetApplicationRoles", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetApplicationRoles(ByVal applicationID As String) As ApplicationRole()
            Dim results() As Object = Me.Invoke("GetApplicationRoles", New Object() {applicationID})
            Return CType(results(0),ApplicationRole())
        End Function
        
        '''<remarks/>
        Public Function BeginGetApplicationRoles(ByVal applicationID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetApplicationRoles", New Object() {applicationID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetApplicationRoles(ByVal asyncResult As System.IAsyncResult) As ApplicationRole()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ApplicationRole())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetApplicationRolesAsync(ByVal applicationID As String)
            Me.GetApplicationRolesAsync(applicationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetApplicationRolesAsync(ByVal applicationID As String, ByVal userState As Object)
            If (Me.GetApplicationRolesOperationCompleted Is Nothing) Then
                Me.GetApplicationRolesOperationCompleted = AddressOf Me.OnGetApplicationRolesOperationCompleted
            End If
            Me.InvokeAsync("GetApplicationRoles", New Object() {applicationID}, Me.GetApplicationRolesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetApplicationRolesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetApplicationRolesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetApplicationRolesCompleted(Me, New GetApplicationRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/DeleteUserAccount", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteUserAccount(ByVal contactID As System.Guid)
            Me.Invoke("DeleteUserAccount", New Object() {contactID})
        End Sub
        
        '''<remarks/>
        Public Function BeginDeleteUserAccount(ByVal contactID As System.Guid, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteUserAccount", New Object() {contactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndDeleteUserAccount(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUserAccountAsync(ByVal contactID As System.Guid)
            Me.DeleteUserAccountAsync(contactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUserAccountAsync(ByVal contactID As System.Guid, ByVal userState As Object)
            If (Me.DeleteUserAccountOperationCompleted Is Nothing) Then
                Me.DeleteUserAccountOperationCompleted = AddressOf Me.OnDeleteUserAccountOperationCompleted
            End If
            Me.InvokeAsync("DeleteUserAccount", New Object() {contactID}, Me.DeleteUserAccountOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteUserAccountOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteUserAccountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteUserAccountCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/CreateUserAccount", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUserAccount(ByVal user As UserAccount, ByVal password As String) As UserAccount
            Dim results() As Object = Me.Invoke("CreateUserAccount", New Object() {user, password})
            Return CType(results(0),UserAccount)
        End Function
        
        '''<remarks/>
        Public Function BeginCreateUserAccount(ByVal user As UserAccount, ByVal password As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateUserAccount", New Object() {user, password}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreateUserAccount(ByVal asyncResult As System.IAsyncResult) As UserAccount
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),UserAccount)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUserAccountAsync(ByVal user As UserAccount, ByVal password As String)
            Me.CreateUserAccountAsync(user, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUserAccountAsync(ByVal user As UserAccount, ByVal password As String, ByVal userState As Object)
            If (Me.CreateUserAccountOperationCompleted Is Nothing) Then
                Me.CreateUserAccountOperationCompleted = AddressOf Me.OnCreateUserAccountOperationCompleted
            End If
            Me.InvokeAsync("CreateUserAccount", New Object() {user, password}, Me.CreateUserAccountOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUserAccountOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUserAccountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUserAccountCompleted(Me, New CreateUserAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/UpdateUserAccount", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateUserAccount(ByVal user As UserAccount, ByVal notifyTaskWorkflow As Boolean) As UserAccount
            Dim results() As Object = Me.Invoke("UpdateUserAccount", New Object() {user, notifyTaskWorkflow})
            Return CType(results(0),UserAccount)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateUserAccount(ByVal user As UserAccount, ByVal notifyTaskWorkflow As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateUserAccount", New Object() {user, notifyTaskWorkflow}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateUserAccount(ByVal asyncResult As System.IAsyncResult) As UserAccount
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),UserAccount)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAccountAsync(ByVal user As UserAccount, ByVal notifyTaskWorkflow As Boolean)
            Me.UpdateUserAccountAsync(user, notifyTaskWorkflow, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAccountAsync(ByVal user As UserAccount, ByVal notifyTaskWorkflow As Boolean, ByVal userState As Object)
            If (Me.UpdateUserAccountOperationCompleted Is Nothing) Then
                Me.UpdateUserAccountOperationCompleted = AddressOf Me.OnUpdateUserAccountOperationCompleted
            End If
            Me.InvokeAsync("UpdateUserAccount", New Object() {user, notifyTaskWorkflow}, Me.UpdateUserAccountOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateUserAccountOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateUserAccountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateUserAccountCompleted(Me, New UpdateUserAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/PrepareTaskForDeletion", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrepareTaskForDeletion(ByVal userName As String) As Boolean
            Dim results() As Object = Me.Invoke("PrepareTaskForDeletion", New Object() {userName})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginPrepareTaskForDeletion(ByVal userName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("PrepareTaskForDeletion", New Object() {userName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndPrepareTaskForDeletion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrepareTaskForDeletionAsync(ByVal userName As String)
            Me.PrepareTaskForDeletionAsync(userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrepareTaskForDeletionAsync(ByVal userName As String, ByVal userState As Object)
            If (Me.PrepareTaskForDeletionOperationCompleted Is Nothing) Then
                Me.PrepareTaskForDeletionOperationCompleted = AddressOf Me.OnPrepareTaskForDeletionOperationCompleted
            End If
            Me.InvokeAsync("PrepareTaskForDeletion", New Object() {userName}, Me.PrepareTaskForDeletionOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrepareTaskForDeletionOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrepareTaskForDeletionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrepareTaskForDeletionCompleted(Me, New PrepareTaskForDeletionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/DeleteUserAccountFromActiveDirectory", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteUserAccountFromActiveDirectory(ByVal userName As String)
            Me.Invoke("DeleteUserAccountFromActiveDirectory", New Object() {userName})
        End Sub
        
        '''<remarks/>
        Public Function BeginDeleteUserAccountFromActiveDirectory(ByVal userName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteUserAccountFromActiveDirectory", New Object() {userName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndDeleteUserAccountFromActiveDirectory(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUserAccountFromActiveDirectoryAsync(ByVal userName As String)
            Me.DeleteUserAccountFromActiveDirectoryAsync(userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUserAccountFromActiveDirectoryAsync(ByVal userName As String, ByVal userState As Object)
            If (Me.DeleteUserAccountFromActiveDirectoryOperationCompleted Is Nothing) Then
                Me.DeleteUserAccountFromActiveDirectoryOperationCompleted = AddressOf Me.OnDeleteUserAccountFromActiveDirectoryOperationCompleted
            End If
            Me.InvokeAsync("DeleteUserAccountFromActiveDirectory", New Object() {userName}, Me.DeleteUserAccountFromActiveDirectoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteUserAccountFromActiveDirectoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteUserAccountFromActiveDirectoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteUserAccountFromActiveDirectoryCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/GetInstitution", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInstitution(ByVal institutionID As String) As Institution
            Dim results() As Object = Me.Invoke("GetInstitution", New Object() {institutionID})
            Return CType(results(0),Institution)
        End Function
        
        '''<remarks/>
        Public Function BeginGetInstitution(ByVal institutionID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetInstitution", New Object() {institutionID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetInstitution(ByVal asyncResult As System.IAsyncResult) As Institution
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Institution)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInstitutionAsync(ByVal institutionID As String)
            Me.GetInstitutionAsync(institutionID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInstitutionAsync(ByVal institutionID As String, ByVal userState As Object)
            If (Me.GetInstitutionOperationCompleted Is Nothing) Then
                Me.GetInstitutionOperationCompleted = AddressOf Me.OnGetInstitutionOperationCompleted
            End If
            Me.InvokeAsync("GetInstitution", New Object() {institutionID}, Me.GetInstitutionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInstitutionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInstitutionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInstitutionCompleted(Me, New GetInstitutionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/GetInstitutions", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInstitutions() As Institution()
            Dim results() As Object = Me.Invoke("GetInstitutions", New Object(-1) {})
            Return CType(results(0),Institution())
        End Function
        
        '''<remarks/>
        Public Function BeginGetInstitutions(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetInstitutions", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetInstitutions(ByVal asyncResult As System.IAsyncResult) As Institution()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Institution())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInstitutionsAsync()
            Me.GetInstitutionsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInstitutionsAsync(ByVal userState As Object)
            If (Me.GetInstitutionsOperationCompleted Is Nothing) Then
                Me.GetInstitutionsOperationCompleted = AddressOf Me.OnGetInstitutionsOperationCompleted
            End If
            Me.InvokeAsync("GetInstitutions", New Object(-1) {}, Me.GetInstitutionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInstitutionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInstitutionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInstitutionsCompleted(Me, New GetInstitutionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/CreateInstitution", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateInstitution(ByVal institution As Institution) As Institution
            Dim results() As Object = Me.Invoke("CreateInstitution", New Object() {institution})
            Return CType(results(0),Institution)
        End Function
        
        '''<remarks/>
        Public Function BeginCreateInstitution(ByVal institution As Institution, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateInstitution", New Object() {institution}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreateInstitution(ByVal asyncResult As System.IAsyncResult) As Institution
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Institution)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateInstitutionAsync(ByVal institution As Institution)
            Me.CreateInstitutionAsync(institution, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateInstitutionAsync(ByVal institution As Institution, ByVal userState As Object)
            If (Me.CreateInstitutionOperationCompleted Is Nothing) Then
                Me.CreateInstitutionOperationCompleted = AddressOf Me.OnCreateInstitutionOperationCompleted
            End If
            Me.InvokeAsync("CreateInstitution", New Object() {institution}, Me.CreateInstitutionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateInstitutionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateInstitutionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateInstitutionCompleted(Me, New CreateInstitutionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/UpdateInstitution", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateInstitution(ByVal institution As Institution) As Institution
            Dim results() As Object = Me.Invoke("UpdateInstitution", New Object() {institution})
            Return CType(results(0),Institution)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateInstitution(ByVal institution As Institution, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateInstitution", New Object() {institution}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateInstitution(ByVal asyncResult As System.IAsyncResult) As Institution
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Institution)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateInstitutionAsync(ByVal institution As Institution)
            Me.UpdateInstitutionAsync(institution, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateInstitutionAsync(ByVal institution As Institution, ByVal userState As Object)
            If (Me.UpdateInstitutionOperationCompleted Is Nothing) Then
                Me.UpdateInstitutionOperationCompleted = AddressOf Me.OnUpdateInstitutionOperationCompleted
            End If
            Me.InvokeAsync("UpdateInstitution", New Object() {institution}, Me.UpdateInstitutionOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateInstitutionOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateInstitutionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateInstitutionCompleted(Me, New UpdateInstitutionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/MergeInstitution", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MergeInstitution(ByVal acquiredInsitution As InstitutionData, ByVal acquiringInstitution As InstitutionData) As InstitutionData
            Dim results() As Object = Me.Invoke("MergeInstitution", New Object() {acquiredInsitution, acquiringInstitution})
            Return CType(results(0),InstitutionData)
        End Function
        
        '''<remarks/>
        Public Function BeginMergeInstitution(ByVal acquiredInsitution As InstitutionData, ByVal acquiringInstitution As InstitutionData, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MergeInstitution", New Object() {acquiredInsitution, acquiringInstitution}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMergeInstitution(ByVal asyncResult As System.IAsyncResult) As InstitutionData
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),InstitutionData)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MergeInstitutionAsync(ByVal acquiredInsitution As InstitutionData, ByVal acquiringInstitution As InstitutionData)
            Me.MergeInstitutionAsync(acquiredInsitution, acquiringInstitution, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MergeInstitutionAsync(ByVal acquiredInsitution As InstitutionData, ByVal acquiringInstitution As InstitutionData, ByVal userState As Object)
            If (Me.MergeInstitutionOperationCompleted Is Nothing) Then
                Me.MergeInstitutionOperationCompleted = AddressOf Me.OnMergeInstitutionOperationCompleted
            End If
            Me.InvokeAsync("MergeInstitution", New Object() {acquiredInsitution, acquiringInstitution}, Me.MergeInstitutionOperationCompleted, userState)
        End Sub
        
        Private Sub OnMergeInstitutionOperationCompleted(ByVal arg As Object)
            If (Not (Me.MergeInstitutionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MergeInstitutionCompleted(Me, New MergeInstitutionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/DeleteInstitution", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteInstitution(ByVal institutionID As String)
            Me.Invoke("DeleteInstitution", New Object() {institutionID})
        End Sub
        
        '''<remarks/>
        Public Function BeginDeleteInstitution(ByVal institutionID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteInstitution", New Object() {institutionID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndDeleteInstitution(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteInstitutionAsync(ByVal institutionID As String)
            Me.DeleteInstitutionAsync(institutionID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteInstitutionAsync(ByVal institutionID As String, ByVal userState As Object)
            If (Me.DeleteInstitutionOperationCompleted Is Nothing) Then
                Me.DeleteInstitutionOperationCompleted = AddressOf Me.OnDeleteInstitutionOperationCompleted
            End If
            Me.InvokeAsync("DeleteInstitution", New Object() {institutionID}, Me.DeleteInstitutionOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteInstitutionOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteInstitutionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteInstitutionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListApplicationRoleUsers", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListApplicationRoleUsers(ByVal applicationRoleID As String) As EntityReference()
            Dim results() As Object = Me.Invoke("ListApplicationRoleUsers", New Object() {applicationRoleID})
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Function BeginListApplicationRoleUsers(ByVal applicationRoleID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListApplicationRoleUsers", New Object() {applicationRoleID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListApplicationRoleUsers(ByVal asyncResult As System.IAsyncResult) As EntityReference()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),EntityReference())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListApplicationRoleUsersAsync(ByVal applicationRoleID As String)
            Me.ListApplicationRoleUsersAsync(applicationRoleID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListApplicationRoleUsersAsync(ByVal applicationRoleID As String, ByVal userState As Object)
            If (Me.ListApplicationRoleUsersOperationCompleted Is Nothing) Then
                Me.ListApplicationRoleUsersOperationCompleted = AddressOf Me.OnListApplicationRoleUsersOperationCompleted
            End If
            Me.InvokeAsync("ListApplicationRoleUsers", New Object() {applicationRoleID}, Me.ListApplicationRoleUsersOperationCompleted, userState)
        End Sub
        
        Private Sub OnListApplicationRoleUsersOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListApplicationRoleUsersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListApplicationRoleUsersCompleted(Me, New ListApplicationRoleUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListGroupUsers", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListGroupUsers(ByVal groupName As String) As User()
            Dim results() As Object = Me.Invoke("ListGroupUsers", New Object() {groupName})
            Return CType(results(0),User())
        End Function
        
        '''<remarks/>
        Public Function BeginListGroupUsers(ByVal groupName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListGroupUsers", New Object() {groupName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListGroupUsers(ByVal asyncResult As System.IAsyncResult) As User()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),User())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListGroupUsersAsync(ByVal groupName As String)
            Me.ListGroupUsersAsync(groupName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListGroupUsersAsync(ByVal groupName As String, ByVal userState As Object)
            If (Me.ListGroupUsersOperationCompleted Is Nothing) Then
                Me.ListGroupUsersOperationCompleted = AddressOf Me.OnListGroupUsersOperationCompleted
            End If
            Me.InvokeAsync("ListGroupUsers", New Object() {groupName}, Me.ListGroupUsersOperationCompleted, userState)
        End Sub
        
        Private Sub OnListGroupUsersOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListGroupUsersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListGroupUsersCompleted(Me, New ListGroupUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://namespace.fhlbsea.com/webservices/ListUserGroups", RequestNamespace:="http://namespace.fhlbsea.com/webservices/", ResponseNamespace:="http://namespace.fhlbsea.com/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListUserGroups(ByVal loggedUser As String) As String()
            Dim results() As Object = Me.Invoke("ListUserGroups", New Object() {loggedUser})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BeginListUserGroups(ByVal loggedUser As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListUserGroups", New Object() {loggedUser}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListUserGroups(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListUserGroupsAsync(ByVal loggedUser As String)
            Me.ListUserGroupsAsync(loggedUser, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListUserGroupsAsync(ByVal loggedUser As String, ByVal userState As Object)
            If (Me.ListUserGroupsOperationCompleted Is Nothing) Then
                Me.ListUserGroupsOperationCompleted = AddressOf Me.OnListUserGroupsOperationCompleted
            End If
            Me.InvokeAsync("ListUserGroups", New Object() {loggedUser}, Me.ListUserGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListUserGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListUserGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListUserGroupsCompleted(Me, New ListUserGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public Class ApplicationError
        
        Private idField As System.Guid
        
        Private userNameField As String
        
        Private pageNameField As String
        
        Private errorDateTimeField As Date
        
        Private errorDescriptionField As String
        
        Private innerExceptionField As String
        
        Private stackTraceField As String
        
        '''<remarks/>
        Public Property ID() As System.Guid
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PageName() As String
            Get
                Return Me.pageNameField
            End Get
            Set
                Me.pageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorDateTime() As Date
            Get
                Return Me.errorDateTimeField
            End Get
            Set
                Me.errorDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorDescription() As String
            Get
                Return Me.errorDescriptionField
            End Get
            Set
                Me.errorDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InnerException() As String
            Get
                Return Me.innerExceptionField
            End Get
            Set
                Me.innerExceptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StackTrace() As String
            Get
                Return Me.stackTraceField
            End Get
            Set
                Me.stackTraceField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public Class InstitutionData
        
        Private nameField As String
        
        Private customerNumberField As String
        
        Private streetAddressField As String
        
        Private cityField As String
        
        Private stateField As String
        
        Private zipCodeField As String
        
        Private phoneField As String
        
        Private contactFirstNameField As String
        
        Private contactLastNameField As String
        
        Private contactPhoneField As String
        
        Private contactEmailField As String
        
        Private contactDepartmentField As String
        
        Private parentCustomerNumberField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustomerNumber() As String
            Get
                Return Me.customerNumberField
            End Get
            Set
                Me.customerNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StreetAddress() As String
            Get
                Return Me.streetAddressField
            End Get
            Set
                Me.streetAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ZipCode() As String
            Get
                Return Me.zipCodeField
            End Get
            Set
                Me.zipCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactFirstName() As String
            Get
                Return Me.contactFirstNameField
            End Get
            Set
                Me.contactFirstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactLastName() As String
            Get
                Return Me.contactLastNameField
            End Get
            Set
                Me.contactLastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactPhone() As String
            Get
                Return Me.contactPhoneField
            End Get
            Set
                Me.contactPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactEmail() As String
            Get
                Return Me.contactEmailField
            End Get
            Set
                Me.contactEmailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactDepartment() As String
            Get
                Return Me.contactDepartmentField
            End Get
            Set
                Me.contactDepartmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ParentCustomerNumber() As String
            Get
                Return Me.parentCustomerNumberField
            End Get
            Set
                Me.parentCustomerNumberField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public Class LandingPageLinkDisplay
        
        Private oLBField As Boolean
        
        Private uAMField As Boolean
        
        Private aHPField As Boolean
        
        Private hSPField As Boolean
        
        Private cIAField As Boolean
        
        '''<remarks/>
        Public Property OLB() As Boolean
            Get
                Return Me.oLBField
            End Get
            Set
                Me.oLBField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UAM() As Boolean
            Get
                Return Me.uAMField
            End Get
            Set
                Me.uAMField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AHP() As Boolean
            Get
                Return Me.aHPField
            End Get
            Set
                Me.aHPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HSP() As Boolean
            Get
                Return Me.hSPField
            End Get
            Set
                Me.hSPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CIA() As Boolean
            Get
                Return Me.cIAField
            End Get
            Set
                Me.cIAField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public Class EntityReference
        
        Private idField As System.Guid
        
        Private parentIDField As System.Guid
        
        Private nameField As String
        
        Private descriptionField As String
        
        '''<remarks/>
        Public Property ID() As System.Guid
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ParentID() As System.Guid
            Get
                Return Me.parentIDField
            End Get
            Set
                Me.parentIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(User)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ApplicationRole)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(UserApplicationRole)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(EntityMap)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(EntityMembership)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(UserAccount)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PostalAddress)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ContactInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Institution)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(County)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(State)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public MustInherit Class Entity
        
        Private idField As System.Guid
        
        Private entityActionField As EntityAction
        
        Private createdByField As String
        
        Private createdOnField As Date
        
        Private lastModifiedByField As String
        
        Private lastModifiedOnField As Date
        
        '''<remarks/>
        Public Property ID() As System.Guid
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntityAction() As EntityAction
            Get
                Return Me.entityActionField
            End Get
            Set
                Me.entityActionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedOn() As Date
            Get
                Return Me.createdOnField
            End Get
            Set
                Me.createdOnField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastModifiedBy() As String
            Get
                Return Me.lastModifiedByField
            End Get
            Set
                Me.lastModifiedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastModifiedOn() As Date
            Get
                Return Me.lastModifiedOnField
            End Get
            Set
                Me.lastModifiedOnField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Public Enum EntityAction
        
        '''<remarks/>
        None
        
        '''<remarks/>
        INS
        
        '''<remarks/>
        UPD
        
        '''<remarks/>
        DEL
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public Class User
        Inherits Entity
        
        Private nameField As String
        
        Private samAccountNameField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SamAccountName() As String
            Get
                Return Me.samAccountNameField
            End Get
            Set
                Me.samAccountNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public Class ApplicationRole
        Inherits Entity
        
        Private applicationField As EntityReference
        
        Private subApplicationField As String
        
        Private nameField As String
        
        Private institutionIDField As System.Guid
        
        Private descriptionField As String
        
        Private aDGroupField As String
        
        Private permissionScopeField As PermissionScope
        
        Private institutionTypeField As InstitutionType
        
        '''<remarks/>
        Public Property Application() As EntityReference
            Get
                Return Me.applicationField
            End Get
            Set
                Me.applicationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SubApplication() As String
            Get
                Return Me.subApplicationField
            End Get
            Set
                Me.subApplicationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstitutionID() As System.Guid
            Get
                Return Me.institutionIDField
            End Get
            Set
                Me.institutionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ADGroup() As String
            Get
                Return Me.aDGroupField
            End Get
            Set
                Me.aDGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PermissionScope() As PermissionScope
            Get
                Return Me.permissionScopeField
            End Get
            Set
                Me.permissionScopeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstitutionType() As InstitutionType
            Get
                Return Me.institutionTypeField
            End Get
            Set
                Me.institutionTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Public Enum PermissionScope
        
        '''<remarks/>
        Application
        
        '''<remarks/>
        Institution
        
        '''<remarks/>
        Department
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Public Enum InstitutionType
        
        '''<remarks/>
        NotApplicable
        
        '''<remarks/>
        MemberBank
        
        '''<remarks/>
        CustomerBank
        
        '''<remarks/>
        Sponsor
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public Class UserApplicationRole
        Inherits Entity
        
        Private applicationRoleField As ApplicationRole
        
        Private roleTargetField As EntityReference
        
        '''<remarks/>
        Public Property ApplicationRole() As ApplicationRole
            Get
                Return Me.applicationRoleField
            End Get
            Set
                Me.applicationRoleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RoleTarget() As EntityReference
            Get
                Return Me.roleTargetField
            End Get
            Set
                Me.roleTargetField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public Class EntityMap
        Inherits Entity
        
        Private fromField As EntityReference
        
        Private toField As EntityReference
        
        '''<remarks/>
        Public Property From() As EntityReference
            Get
                Return Me.fromField
            End Get
            Set
                Me.fromField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [To]() As EntityReference
            Get
                Return Me.toField
            End Get
            Set
                Me.toField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public Class EntityMembership
        Inherits Entity
        
        Private fromField As EntityReference
        
        Private toField As EntityMap
        
        '''<remarks/>
        Public Property From() As EntityReference
            Get
                Return Me.fromField
            End Get
            Set
                Me.fromField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [To]() As EntityMap
            Get
                Return Me.toField
            End Get
            Set
                Me.toField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public Class UserAccount
        Inherits Entity
        
        Private applicationField As EntityReference
        
        Private userAccountNameField As String
        
        Private institutionNameField As String
        
        Private institutionIDField As System.Guid
        
        Private secretQuestionField As String
        
        Private secretAnswerField As String
        
        Private forceChangePasswordField As Boolean
        
        Private fullNameField As String
        
        Private firstNameField As String
        
        Private lastNameField As String
        
        Private middleNameField As String
        
        Private salutationField As String
        
        Private suffixField As String
        
        Private titleField As String
        
        Private organizationField As String
        
        Private departmentField As String
        
        Private directoryRankingField As Integer
        
        Private effectiveFromDateField As Date
        
        Private effectiveThroughDateField As Date
        
        Private lastLoginField As Date
        
        Private institutionsField() As EntityMembership
        
        Private applicationRolesField() As UserApplicationRole
        
        Private uniqueApplicationRolesField() As UserApplicationRole
        
        Private contactInfoField() As ContactInfo
        
        Private departmentsField() As EntityMembership
        
        Private postalAddressesField() As PostalAddress
        
        Private primaryEmailField As ContactInfo
        
        Private primaryPhoneField As ContactInfo
        
        Private primaryFaxField As ContactInfo
        
        Private primaryAddressField As PostalAddress
        
        '''<remarks/>
        Public Property Application() As EntityReference
            Get
                Return Me.applicationField
            End Get
            Set
                Me.applicationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserAccountName() As String
            Get
                Return Me.userAccountNameField
            End Get
            Set
                Me.userAccountNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstitutionName() As String
            Get
                Return Me.institutionNameField
            End Get
            Set
                Me.institutionNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstitutionID() As System.Guid
            Get
                Return Me.institutionIDField
            End Get
            Set
                Me.institutionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SecretQuestion() As String
            Get
                Return Me.secretQuestionField
            End Get
            Set
                Me.secretQuestionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SecretAnswer() As String
            Get
                Return Me.secretAnswerField
            End Get
            Set
                Me.secretAnswerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ForceChangePassword() As Boolean
            Get
                Return Me.forceChangePasswordField
            End Get
            Set
                Me.forceChangePasswordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FullName() As String
            Get
                Return Me.fullNameField
            End Get
            Set
                Me.fullNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MiddleName() As String
            Get
                Return Me.middleNameField
            End Get
            Set
                Me.middleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Salutation() As String
            Get
                Return Me.salutationField
            End Get
            Set
                Me.salutationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Suffix() As String
            Get
                Return Me.suffixField
            End Get
            Set
                Me.suffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Organization() As String
            Get
                Return Me.organizationField
            End Get
            Set
                Me.organizationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Department() As String
            Get
                Return Me.departmentField
            End Get
            Set
                Me.departmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DirectoryRanking() As Integer
            Get
                Return Me.directoryRankingField
            End Get
            Set
                Me.directoryRankingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EffectiveFromDate() As Date
            Get
                Return Me.effectiveFromDateField
            End Get
            Set
                Me.effectiveFromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EffectiveThroughDate() As Date
            Get
                Return Me.effectiveThroughDateField
            End Get
            Set
                Me.effectiveThroughDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastLogin() As Date
            Get
                Return Me.lastLoginField
            End Get
            Set
                Me.lastLoginField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Institutions() As EntityMembership()
            Get
                Return Me.institutionsField
            End Get
            Set
                Me.institutionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicationRoles() As UserApplicationRole()
            Get
                Return Me.applicationRolesField
            End Get
            Set
                Me.applicationRolesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UniqueApplicationRoles() As UserApplicationRole()
            Get
                Return Me.uniqueApplicationRolesField
            End Get
            Set
                Me.uniqueApplicationRolesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactInfo() As ContactInfo()
            Get
                Return Me.contactInfoField
            End Get
            Set
                Me.contactInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Departments() As EntityMembership()
            Get
                Return Me.departmentsField
            End Get
            Set
                Me.departmentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostalAddresses() As PostalAddress()
            Get
                Return Me.postalAddressesField
            End Get
            Set
                Me.postalAddressesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrimaryEmail() As ContactInfo
            Get
                Return Me.primaryEmailField
            End Get
            Set
                Me.primaryEmailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrimaryPhone() As ContactInfo
            Get
                Return Me.primaryPhoneField
            End Get
            Set
                Me.primaryPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrimaryFax() As ContactInfo
            Get
                Return Me.primaryFaxField
            End Get
            Set
                Me.primaryFaxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrimaryAddress() As PostalAddress
            Get
                Return Me.primaryAddressField
            End Get
            Set
                Me.primaryAddressField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public Class ContactInfo
        Inherits Entity
        
        Private parentField As EntityReference
        
        Private contactInfoTypeField As ContactInfoType
        
        Private isDefaultField As Boolean
        
        Private infoField As String
        
        Private infoExtensionField As String
        
        Private customLabelField As String
        
        '''<remarks/>
        Public Property Parent() As EntityReference
            Get
                Return Me.parentField
            End Get
            Set
                Me.parentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactInfoType() As ContactInfoType
            Get
                Return Me.contactInfoTypeField
            End Get
            Set
                Me.contactInfoTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsDefault() As Boolean
            Get
                Return Me.isDefaultField
            End Get
            Set
                Me.isDefaultField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Info() As String
            Get
                Return Me.infoField
            End Get
            Set
                Me.infoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InfoExtension() As String
            Get
                Return Me.infoExtensionField
            End Get
            Set
                Me.infoExtensionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustomLabel() As String
            Get
                Return Me.customLabelField
            End Get
            Set
                Me.customLabelField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Public Enum ContactInfoType
        
        '''<remarks/>
        WorkPhone
        
        '''<remarks/>
        HomePhone
        
        '''<remarks/>
        AssistantPhone
        
        '''<remarks/>
        MobilePhone
        
        '''<remarks/>
        WorkEmail
        
        '''<remarks/>
        HomeEmail
        
        '''<remarks/>
        AssistantEmail
        
        '''<remarks/>
        WorkFax
        
        '''<remarks/>
        HomeFax
        
        '''<remarks/>
        AssistantFax
        
        '''<remarks/>
        Pager
        
        '''<remarks/>
        CorporatePhone
        
        '''<remarks/>
        CorporateFax
        
        '''<remarks/>
        Custom
        
        '''<remarks/>
        PrimaryEmail
        
        '''<remarks/>
        PrimaryPhone
        
        '''<remarks/>
        PrimaryFax
        
        '''<remarks/>
        TollFree
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public Class PostalAddress
        Inherits Entity
        
        Private parentField As EntityReference
        
        Private postalAddressTypeField As PostalAddressType
        
        Private isDefaultField As Boolean
        
        Private refInstitutionIDField As System.Guid
        
        Private refPostalAddressTypeField As PostalAddressType
        
        Private streetAddress1Field As String
        
        Private streetAddress2Field As String
        
        Private cityField As String
        
        Private stateField As String
        
        Private countyIDField As Integer
        
        Private zipcodeField As String
        
        Private customLabelField As String
        
        '''<remarks/>
        Public Property Parent() As EntityReference
            Get
                Return Me.parentField
            End Get
            Set
                Me.parentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostalAddressType() As PostalAddressType
            Get
                Return Me.postalAddressTypeField
            End Get
            Set
                Me.postalAddressTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsDefault() As Boolean
            Get
                Return Me.isDefaultField
            End Get
            Set
                Me.isDefaultField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RefInstitutionID() As System.Guid
            Get
                Return Me.refInstitutionIDField
            End Get
            Set
                Me.refInstitutionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RefPostalAddressType() As PostalAddressType
            Get
                Return Me.refPostalAddressTypeField
            End Get
            Set
                Me.refPostalAddressTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StreetAddress1() As String
            Get
                Return Me.streetAddress1Field
            End Get
            Set
                Me.streetAddress1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StreetAddress2() As String
            Get
                Return Me.streetAddress2Field
            End Get
            Set
                Me.streetAddress2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountyID() As Integer
            Get
                Return Me.countyIDField
            End Get
            Set
                Me.countyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Zipcode() As String
            Get
                Return Me.zipcodeField
            End Get
            Set
                Me.zipcodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustomLabel() As String
            Get
                Return Me.customLabelField
            End Get
            Set
                Me.customLabelField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Public Enum PostalAddressType
        
        '''<remarks/>
        Work
        
        '''<remarks/>
        Statement
        
        '''<remarks/>
        Corporate
        
        '''<remarks/>
        Charter
        
        '''<remarks/>
        Home
        
        '''<remarks/>
        Custom
        
        '''<remarks/>
        Primary
        
        '''<remarks/>
        Mailing
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public Class Institution
        Inherits Entity
        
        Private parentField As EntityReference
        
        Private institutionTypeField As InstitutionType
        
        Private institutionNameField As String
        
        Private descriptionField As String
        
        Private customerNumberField As String
        
        Private institutionTaxIDField As String
        
        Private isActiveField As Boolean
        
        Private effectiveFromDateField As Date
        
        Private effectiveThroughDateField As Date
        
        Private bankTypeField As BankType
        
        Private ownershipTypeField As OwnershipType
        
        Private regulatorTypeField As RegulatorType
        
        Private charterTypeField As CharterType
        
        Private insuranceTypeField As InsuranceType
        
        Private reportingAgencyTypeField As ReportingAgencyType
        
        Private mppPartTypeField As MppPartType
        
        Private countyField As String
        
        Private cityField As String
        
        Private stateField As String
        
        Private craDateField As Date
        
        Private craRatingField As CraRating
        
        Private foundedField As Date
        
        Private marketingRepField As String
        
        Private crdRepField As String
        
        Private webSiteField As String
        
        Private contactInfoField() As ContactInfo
        
        Private postalAddressesField() As PostalAddress
        
        Private primaryPhoneField As ContactInfo
        
        Private primaryFaxField As ContactInfo
        
        Private statementAddressField As PostalAddress
        
        '''<remarks/>
        Public Property Parent() As EntityReference
            Get
                Return Me.parentField
            End Get
            Set
                Me.parentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstitutionType() As InstitutionType
            Get
                Return Me.institutionTypeField
            End Get
            Set
                Me.institutionTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstitutionName() As String
            Get
                Return Me.institutionNameField
            End Get
            Set
                Me.institutionNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustomerNumber() As String
            Get
                Return Me.customerNumberField
            End Get
            Set
                Me.customerNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstitutionTaxID() As String
            Get
                Return Me.institutionTaxIDField
            End Get
            Set
                Me.institutionTaxIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsActive() As Boolean
            Get
                Return Me.isActiveField
            End Get
            Set
                Me.isActiveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EffectiveFromDate() As Date
            Get
                Return Me.effectiveFromDateField
            End Get
            Set
                Me.effectiveFromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EffectiveThroughDate() As Date
            Get
                Return Me.effectiveThroughDateField
            End Get
            Set
                Me.effectiveThroughDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankType() As BankType
            Get
                Return Me.bankTypeField
            End Get
            Set
                Me.bankTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OwnershipType() As OwnershipType
            Get
                Return Me.ownershipTypeField
            End Get
            Set
                Me.ownershipTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RegulatorType() As RegulatorType
            Get
                Return Me.regulatorTypeField
            End Get
            Set
                Me.regulatorTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CharterType() As CharterType
            Get
                Return Me.charterTypeField
            End Get
            Set
                Me.charterTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InsuranceType() As InsuranceType
            Get
                Return Me.insuranceTypeField
            End Get
            Set
                Me.insuranceTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReportingAgencyType() As ReportingAgencyType
            Get
                Return Me.reportingAgencyTypeField
            End Get
            Set
                Me.reportingAgencyTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MppPartType() As MppPartType
            Get
                Return Me.mppPartTypeField
            End Get
            Set
                Me.mppPartTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property County() As String
            Get
                Return Me.countyField
            End Get
            Set
                Me.countyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CraDate() As Date
            Get
                Return Me.craDateField
            End Get
            Set
                Me.craDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CraRating() As CraRating
            Get
                Return Me.craRatingField
            End Get
            Set
                Me.craRatingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Founded() As Date
            Get
                Return Me.foundedField
            End Get
            Set
                Me.foundedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MarketingRep() As String
            Get
                Return Me.marketingRepField
            End Get
            Set
                Me.marketingRepField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CrdRep() As String
            Get
                Return Me.crdRepField
            End Get
            Set
                Me.crdRepField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WebSite() As String
            Get
                Return Me.webSiteField
            End Get
            Set
                Me.webSiteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactInfo() As ContactInfo()
            Get
                Return Me.contactInfoField
            End Get
            Set
                Me.contactInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostalAddresses() As PostalAddress()
            Get
                Return Me.postalAddressesField
            End Get
            Set
                Me.postalAddressesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrimaryPhone() As ContactInfo
            Get
                Return Me.primaryPhoneField
            End Get
            Set
                Me.primaryPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrimaryFax() As ContactInfo
            Get
                Return Me.primaryFaxField
            End Get
            Set
                Me.primaryFaxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StatementAddress() As PostalAddress
            Get
                Return Me.statementAddressField
            End Get
            Set
                Me.statementAddressField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Public Enum BankType
        
        '''<remarks/>
        Unknown
        
        '''<remarks/>
        SavingsAndLoan
        
        '''<remarks/>
        SavingsBank
        
        '''<remarks/>
        InsuranceComp
        
        '''<remarks/>
        MutSavBank
        
        '''<remarks/>
        CreditUnion
        
        '''<remarks/>
        CommBank
        
        '''<remarks/>
        GovtAgency
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Public Enum OwnershipType
        
        '''<remarks/>
        Unknown
        
        '''<remarks/>
        Mutual
        
        '''<remarks/>
        Stock
        
        '''<remarks/>
        InsuranceCompany
        
        '''<remarks/>
        GovernmentStatute
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Public Enum RegulatorType
        
        '''<remarks/>
        Unknown
        
        '''<remarks/>
        OTS
        
        '''<remarks/>
        OCC
        
        '''<remarks/>
        State
        
        '''<remarks/>
        NCUA
        
        '''<remarks/>
        Other
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Public Enum CharterType
        
        '''<remarks/>
        Unknown
        
        '''<remarks/>
        Federal
        
        '''<remarks/>
        State
        
        '''<remarks/>
        InsuranceCompany
        
        '''<remarks/>
        GovernmentStatute
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Public Enum InsuranceType
        
        '''<remarks/>
        Unknown
        
        '''<remarks/>
        SAIF
        
        '''<remarks/>
        BIF
        
        '''<remarks/>
        InsuranceComp
        
        '''<remarks/>
        [Private]
        
        '''<remarks/>
        NCUSIF
        
        '''<remarks/>
        Other
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Public Enum ReportingAgencyType
        
        '''<remarks/>
        Unknown
        
        '''<remarks/>
        FDIC
        
        '''<remarks/>
        OTS
        
        '''<remarks/>
        NCUA
        
        '''<remarks/>
        State
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Public Enum MppPartType
        
        '''<remarks/>
        Unknown
        
        '''<remarks/>
        SellerAndServicer
        
        '''<remarks/>
        Seller
        
        '''<remarks/>
        Servicer
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Public Enum CraRating
        
        '''<remarks/>
        Unrated
        
        '''<remarks/>
        NotApplicable
        
        '''<remarks/>
        Outstanding
        
        '''<remarks/>
        Satisfactory
        
        '''<remarks/>
        NeedsImprovement
        
        '''<remarks/>
        NonCompliant
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public Class County
        Inherits Entity
        
        Private stateCodeField As String
        
        Private countyIDField As Integer
        
        Private countyNameField As String
        
        '''<remarks/>
        Public Property StateCode() As String
            Get
                Return Me.stateCodeField
            End Get
            Set
                Me.stateCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountyID() As Integer
            Get
                Return Me.countyIDField
            End Get
            Set
                Me.countyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountyName() As String
            Get
                Return Me.countyNameField
            End Get
            Set
                Me.countyNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://namespace.fhlbsea.com/webservices/")>  _
    Partial Public Class State
        Inherits Entity
        
        Private stateCodeField As String
        
        Private stateNameField As String
        
        '''<remarks/>
        Public Property StateCode() As String
            Get
                Return Me.stateCodeField
            End Get
            Set
                Me.stateCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StateName() As String
            Get
                Return Me.stateNameField
            End Get
            Set
                Me.stateNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListApplicationErrorsCompletedEventHandler(ByVal sender As Object, ByVal e As ListApplicationErrorsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListApplicationErrorsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ApplicationError()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ApplicationError())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListStatesCompletedEventHandler(ByVal sender As Object, ByVal e As ListStatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListStatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As State()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),State())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListCountiesCompletedEventHandler(ByVal sender As Object, ByVal e As ListCountiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListCountiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As County()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),County())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListApplicationsCompletedEventHandler(ByVal sender As Object, ByVal e As ListApplicationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListApplicationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntityReference()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntityReference())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListUserApplicationsCompletedEventHandler(ByVal sender As Object, ByVal e As ListUserApplicationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListUserApplicationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntityReference()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntityReference())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListAssignableApplicationsCompletedEventHandler(ByVal sender As Object, ByVal e As ListAssignableApplicationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListAssignableApplicationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntityReference()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntityReference())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListAssignableApplicationInstitutionsCompletedEventHandler(ByVal sender As Object, ByVal e As ListAssignableApplicationInstitutionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListAssignableApplicationInstitutionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntityReference()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntityReference())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListAssignableApplicationRolesCompletedEventHandler(ByVal sender As Object, ByVal e As ListAssignableApplicationRolesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListAssignableApplicationRolesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntityReference()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntityReference())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListAssignableApplicationInstitutionRolesCompletedEventHandler(ByVal sender As Object, ByVal e As ListAssignableApplicationInstitutionRolesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListAssignableApplicationInstitutionRolesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntityReference()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntityReference())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListApplicationRolesCompletedEventHandler(ByVal sender As Object, ByVal e As ListApplicationRolesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListApplicationRolesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntityReference()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntityReference())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListUserApplicationRolesCompletedEventHandler(ByVal sender As Object, ByVal e As ListUserApplicationRolesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListUserApplicationRolesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntityReference()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntityReference())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListUserApplicationInstitutionRolesCompletedEventHandler(ByVal sender As Object, ByVal e As ListUserApplicationInstitutionRolesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListUserApplicationInstitutionRolesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntityReference()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntityReference())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListDepartmentsCompletedEventHandler(ByVal sender As Object, ByVal e As ListDepartmentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListDepartmentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntityReference()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntityReference())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListInstitutionsCompletedEventHandler(ByVal sender As Object, ByVal e As ListInstitutionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListInstitutionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Institution()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Institution())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListInstitutionsByTypeCompletedEventHandler(ByVal sender As Object, ByVal e As ListInstitutionsByTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListInstitutionsByTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Institution()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Institution())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListUserInstitutionsCompletedEventHandler(ByVal sender As Object, ByVal e As ListUserInstitutionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListUserInstitutionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Institution()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Institution())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub GetExternalUsersForInstitutionAndRolesCompletedEventHandler(ByVal sender As Object, ByVal e As GetExternalUsersForInstitutionAndRolesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetExternalUsersForInstitutionAndRolesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserAccount()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserAccount())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListInstitutionUsersCompletedEventHandler(ByVal sender As Object, ByVal e As ListInstitutionUsersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListInstitutionUsersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserAccount()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserAccount())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub IsInternalFHLBUserCompletedEventHandler(ByVal sender As Object, ByVal e As IsInternalFHLBUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsInternalFHLBUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub GetLandingPageLinkDisplayCompletedEventHandler(ByVal sender As Object, ByVal e As GetLandingPageLinkDisplayCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLandingPageLinkDisplayCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LandingPageLinkDisplay
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LandingPageLinkDisplay)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListInstitutionsByNameCompletedEventHandler(ByVal sender As Object, ByVal e As ListInstitutionsByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListInstitutionsByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Institution()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Institution())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListUserApplicationInstitutionsCompletedEventHandler(ByVal sender As Object, ByVal e As ListUserApplicationInstitutionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListUserApplicationInstitutionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntityReference()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntityReference())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListUsersCompletedEventHandler(ByVal sender As Object, ByVal e As ListUsersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListUsersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserAccount()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserAccount())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListUserAdministratorsCompletedEventHandler(ByVal sender As Object, ByVal e As ListUserAdministratorsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListUserAdministratorsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserAccount()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserAccount())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListUserAccountsCompletedEventHandler(ByVal sender As Object, ByVal e As ListUserAccountsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListUserAccountsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserAccount()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserAccount())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ResetPasswordCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub GetUserAccountCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserAccountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserAccountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserAccount
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserAccount)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub GetApplicationRolesCompletedEventHandler(ByVal sender As Object, ByVal e As GetApplicationRolesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetApplicationRolesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ApplicationRole()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ApplicationRole())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub DeleteUserAccountCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub CreateUserAccountCompletedEventHandler(ByVal sender As Object, ByVal e As CreateUserAccountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUserAccountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserAccount
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserAccount)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub UpdateUserAccountCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateUserAccountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateUserAccountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserAccount
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserAccount)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub PrepareTaskForDeletionCompletedEventHandler(ByVal sender As Object, ByVal e As PrepareTaskForDeletionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrepareTaskForDeletionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub DeleteUserAccountFromActiveDirectoryCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub GetInstitutionCompletedEventHandler(ByVal sender As Object, ByVal e As GetInstitutionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInstitutionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Institution
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Institution)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub GetInstitutionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetInstitutionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInstitutionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Institution()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Institution())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub CreateInstitutionCompletedEventHandler(ByVal sender As Object, ByVal e As CreateInstitutionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateInstitutionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Institution
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Institution)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub UpdateInstitutionCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateInstitutionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateInstitutionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Institution
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Institution)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub MergeInstitutionCompletedEventHandler(ByVal sender As Object, ByVal e As MergeInstitutionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MergeInstitutionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As InstitutionData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),InstitutionData)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub DeleteInstitutionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListApplicationRoleUsersCompletedEventHandler(ByVal sender As Object, ByVal e As ListApplicationRoleUsersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListApplicationRoleUsersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntityReference()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntityReference())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListGroupUsersCompletedEventHandler(ByVal sender As Object, ByVal e As ListGroupUsersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListGroupUsersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As User()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),User())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")>  _
    Public Delegate Sub ListUserGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As ListUserGroupsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListUserGroupsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
End Namespace
