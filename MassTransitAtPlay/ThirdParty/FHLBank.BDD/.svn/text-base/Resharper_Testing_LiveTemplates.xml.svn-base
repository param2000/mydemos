<TemplatesExport family="Live Templates">
  <Template uid="fadb01f2-5eb3-447d-9760-eb243c2e3f8e" text="&lt;Test()&gt; _&#xD;&#xA;Public Sub $NAME$()&#xD;&#xA;      $END$&#xD;&#xA;End Sub" shortcut="tm" description="Test Method" reformat="true" shortenQualifiedReferences="true">
    <Context>
      <VBContext context="Everywhere" />
    </Context>
    <Categories />
    <Variables>
      <Variable name="NAME" expression="" initialRange="0" />
    </Variables>
    <CustomProperties />
  </Template>
  <Template uid="5ba0f3ef-21da-41f5-8e1f-129ba2c5ac5b" text="&lt;TestFixture(), Concern(GetType($concern$))&gt; _&#xD;&#xA;Public Class When_$concern$_$has_this_happen$ &#xD;&#xA;	Inherits concern_for_$concern$&#xD;&#xA;&#xD;&#xA;	Protected result As Object&#xD;&#xA;&#xD;&#xA;	Public Overrides Sub in_this_context()&#xD;&#xA;		MyBase.in_this_context()&#xD;&#xA;	End Sub&#xD;&#xA;&#xD;&#xA;	Public Overrides Sub because()&#xD;&#xA;		result = $this_happened$&#xD;&#xA;	End Sub&#xD;&#xA;&#xD;&#xA;	&lt;Test()&gt; _&#xD;&#xA;	Public Sub should_$have_this_result$()&#xD;&#xA;		$END$&#xD;&#xA;	End Sub&#xD;&#xA;&#xD;&#xA;End Class" shortcut="bddtf" description="BDDTestFixture" reformat="false" shortenQualifiedReferences="true">
    <Context>
      <VBContext context="Everywhere" />
    </Context>
    <Categories />
    <Variables>
      <Variable name="concern" expression="" initialRange="0" />
      <Variable name="has_this_happen" expression="" initialRange="0" />
      <Variable name="this_happened" expression="" initialRange="0" />
      <Variable name="have_this_result" expression="" initialRange="0" />
    </Variables>
    <CustomProperties />
  </Template>
  <Template uid="a07a5e08-e987-409e-ac5f-a2067398a65f" text="&lt;Test()&gt; _&#xD;&#xA;Public Sub Verify_$name$_is_set_correctly_by_the_constructor()&#xD;&#xA;      Assert.AreEqual(_$name$,_record.$name$)&#xD;&#xA;End Sub&#xD;&#xA;&#xD;&#xA;$END$" shortcut="verifyconstructor" description="VerifyTestMethod" reformat="true" shortenQualifiedReferences="true">
    <Context>
      <VBContext context="Everywhere" />
    </Context>
    <Categories />
    <Variables>
      <Variable name="name" expression="" initialRange="0" />
    </Variables>
    <CustomProperties />
  </Template>
  <Template uid="9b9747f3-60f7-4465-8937-066e9d88b48f" text="&lt;Test()&gt; _&#xD;&#xA;Public Sub Verify_$name$_is_mapped_to_database_correctly()&#xD;&#xA;      Assert.IsNotNull(result(0).$name$)&#xD;&#xA;      Assert.AreEqual(record.$name$,result(0).$name$)&#xD;&#xA;End Sub&#xD;&#xA;&#xD;&#xA;$END$" shortcut="verifydbmapping" description="Verify A Mapping" reformat="true" shortenQualifiedReferences="true">
    <Context>
      <VBContext context="Everywhere" />
    </Context>
    <Categories />
    <Variables>
      <Variable name="name" expression="" initialRange="0" />
    </Variables>
    <CustomProperties />
  </Template>
  <Template uid="d2776d7e-2a75-4f34-ab91-97489abaa08e" text="&lt;Test()&gt; _&#xD;&#xA;Public Sub Verify_$name$_is_updated_correctly_during_merge()&#xD;&#xA;    Assert.AreEqual(result(0).$name$, updating_record.$name$)&#xD;&#xA;End Sub&#xD;&#xA;&#xD;&#xA;$END$" shortcut="verifymerge" description="Verifies Record Merging is working correctly" reformat="true" shortenQualifiedReferences="true">
    <Context>
      <VBContext context="Everywhere" />
    </Context>
    <Categories />
    <Variables>
      <Variable name="name" expression="" initialRange="0" />
    </Variables>
    <CustomProperties />
  </Template>
  <Template uid="8aa91525-fa5b-4fdb-b0b8-6d89a3144c71" text="&lt;Test()&gt; _&#xD;&#xA;Public Sub Verify_$name$_is_mapped_correctly_from_record_factory_to_record()&#xD;&#xA;      Assert.AreEqual(record_factory.$name$,record.$name$)&#xD;&#xA;End Sub&#xD;&#xA;&#xD;&#xA;$END$" shortcut="verifyrecordfactory" description="Verification of the Record Factory Mapping" reformat="true" shortenQualifiedReferences="true">
    <Context>
      <VBContext context="Everywhere" />
    </Context>
    <Categories />
    <Variables>
      <Variable name="name" expression="" initialRange="0" />
    </Variables>
    <CustomProperties />
  </Template>
</TemplatesExport>